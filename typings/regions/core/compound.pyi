from .core import PixelRegion, SkyRegion
from _typeshed import Incomplete

class CompoundPixelRegion(PixelRegion):
    region1: Incomplete
    region2: Incomplete
    meta: Incomplete
    visual: Incomplete
    def __init__(self, region1, region2, operator, meta: Incomplete | None = ..., visual: Incomplete | None = ...) -> None: ...
    @property
    def operator(self): ...
    def contains(self, pixcoord): ...
    def to_mask(self, mode: str = ..., subpixels: int = ...): ...
    def to_sky(self, wcs): ...
    def as_artist(self, origin=..., **kwargs): ...
    @property
    def bounding_box(self): ...
    @property
    def area(self) -> None: ...
    def rotate(self, center, angle): ...

class CompoundSkyRegion(SkyRegion):
    region1: Incomplete
    region2: Incomplete
    meta: Incomplete
    visual: Incomplete
    def __init__(self, region1, region2, operator, meta: Incomplete | None = ..., visual: Incomplete | None = ...) -> None: ...
    @property
    def operator(self): ...
    def contains(self, skycoord, wcs): ...
    def to_pixel(self, wcs): ...
    def as_artist(self, ax, **kwargs) -> None: ...
