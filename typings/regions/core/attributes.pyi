import abc
from .metadata import RegionMeta as RegionMeta, RegionVisual as RegionVisual
from .pixcoord import PixCoord as PixCoord
from _typeshed import Incomplete

class RegionAttribute(abc.ABC, metaclass=abc.ABCMeta):
    __doc__: Incomplete
    def __init__(self, doc: str = ...) -> None: ...
    name: Incomplete
    def __set_name__(self, owner, name) -> None: ...
    def __get__(self, instance, owner): ...
    def __set__(self, instance, value) -> None: ...
    def __delete__(self, instance) -> None: ...

class ScalarPixCoord(RegionAttribute): ...
class OneDPixCoord(RegionAttribute): ...
class PositiveScalar(RegionAttribute): ...
class ScalarSkyCoord(RegionAttribute): ...
class OneDSkyCoord(RegionAttribute): ...
class ScalarAngle(RegionAttribute): ...
class PositiveScalarAngle(RegionAttribute): ...

class RegionType(RegionAttribute):
    regionclass: Incomplete
    def __init__(self, name, regionclass) -> None: ...

class RegionMetaDescr(RegionAttribute):
    def __set__(self, instance, value) -> None: ...

class RegionVisualDescr(RegionAttribute):
    def __set__(self, instance, value) -> None: ...
