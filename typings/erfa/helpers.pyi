from .core import ErfaWarning as ErfaWarning
from .ufunc import dt_eraLEAPSECOND as dt_eraLEAPSECOND, get_leap_seconds as get_leap_seconds, set_leap_seconds as set_leap_seconds
from _typeshed import Incomplete

class classproperty(property):
    def __new__(cls, fget: Incomplete | None = ..., doc: Incomplete | None = ..., lazy: bool = ...): ...
    __doc__: Incomplete
    def __init__(self, fget, doc: Incomplete | None = ..., lazy: bool = ...) -> None: ...
    def __get__(self, obj, objtype): ...
    def getter(self, fget): ...
    def setter(self, fset) -> None: ...
    def deleter(self, fdel) -> None: ...

class leap_seconds:
    def __init__(self) -> None: ...
    @classmethod
    def get(cls): ...
    @classmethod
    def validate(cls, table): ...
    @classmethod
    def set(cls, table: Incomplete | None = ...) -> None: ...
    def expires(cls): ...
    def expired(cls): ...
    @classmethod
    def update(cls, table): ...
