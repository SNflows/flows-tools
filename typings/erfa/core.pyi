from _typeshed import Incomplete

class ErfaError(ValueError): ...
class ErfaWarning(UserWarning): ...

DPI: float
D2PI: float
DR2D: float
DD2R: float
DR2AS: float
DAS2R: float
DS2R: float
TURNAS: float
DMAS2R: Incomplete
DTY: float
DAYSEC: float
DJY: float
DJC: float
DJM: float
DJ00: float
DJM0: float
DJM00: float
DJM77: float
TTMTAI: float
DAU: float
CMPS: float
AULT: Incomplete
DC: Incomplete
ELG: float
ELB: float
TDB0: Incomplete
SRS: float
WGS84: int
GRS80: int
WGS72: int

def cal2jd(iy, im, id): ...
def epb(dj1, dj2): ...
def epb2jd(epb): ...
def epj(dj1, dj2): ...
def epj2jd(epj): ...
def jd2cal(dj1, dj2): ...
def jdcalf(ndp, dj1, dj2): ...
def ab(pnat, v, s, bm1): ...
def apcg(date1, date2, ebpv, ehp): ...
def apcg13(date1, date2): ...
def apci(date1, date2, ebpv, ehp, x, y, s): ...
def apci13(date1, date2): ...
def apco(date1, date2, ebpv, ehp, x, y, s, theta, elong, phi, hm, xp, yp, sp, refa, refb): ...
def apco13(utc1, utc2, dut1, elong, phi, hm, xp, yp, phpa, tc, rh, wl): ...
def apcs(date1, date2, pv, ebpv, ehp): ...
def apcs13(date1, date2, pv): ...
def aper(theta, astrom): ...
def aper13(ut11, ut12, astrom): ...
def apio(sp, theta, elong, phi, hm, xp, yp, refa, refb): ...
def apio13(utc1, utc2, dut1, elong, phi, hm, xp, yp, phpa, tc, rh, wl): ...
def atcc13(rc, dc, pr, pd, px, rv, date1, date2): ...
def atccq(rc, dc, pr, pd, px, rv, astrom): ...
def atci13(rc, dc, pr, pd, px, rv, date1, date2): ...
def atciq(rc, dc, pr, pd, px, rv, astrom): ...
def atciqn(rc, dc, pr, pd, px, rv, astrom, b): ...
def atciqz(rc, dc, astrom): ...
def atco13(rc, dc, pr, pd, px, rv, utc1, utc2, dut1, elong, phi, hm, xp, yp, phpa, tc, rh, wl): ...
def atic13(ri, di, date1, date2): ...
def aticq(ri, di, astrom): ...
def aticqn(ri, di, astrom, b): ...
def atio13(ri, di, utc1, utc2, dut1, elong, phi, hm, xp, yp, phpa, tc, rh, wl): ...
def atioq(ri, di, astrom): ...
def atoc13(type, ob1, ob2, utc1, utc2, dut1, elong, phi, hm, xp, yp, phpa, tc, rh, wl): ...
def atoi13(type, ob1, ob2, utc1, utc2, dut1, elong, phi, hm, xp, yp, phpa, tc, rh, wl): ...
def atoiq(type, ob1, ob2, astrom): ...
def ld(bm, p, q, e, em, dlim): ...
def ldn(b, ob, sc): ...
def ldsun(p, e, em): ...
def pmpx(rc, dc, pr, pd, px, rv, pmt, pob): ...
def pmsafe(ra1, dec1, pmr1, pmd1, px1, rv1, ep1a, ep1b, ep2a, ep2b): ...
def pvtob(elong, phi, hm, xp, yp, sp, theta): ...
def refco(phpa, tc, rh, wl): ...
def epv00(date1, date2): ...
def moon98(date1, date2): ...
def plan94(date1, date2, np): ...
def fad03(t): ...
def fae03(t): ...
def faf03(t): ...
def faju03(t): ...
def fal03(t): ...
def falp03(t): ...
def fama03(t): ...
def fame03(t): ...
def fane03(t): ...
def faom03(t): ...
def fapa03(t): ...
def fasa03(t): ...
def faur03(t): ...
def fave03(t): ...
def bi00(): ...
def bp00(date1, date2): ...
def bp06(date1, date2): ...
def bpn2xy(rbpn): ...
def c2i00a(date1, date2): ...
def c2i00b(date1, date2): ...
def c2i06a(date1, date2): ...
def c2ibpn(date1, date2, rbpn): ...
def c2ixy(date1, date2, x, y): ...
def c2ixys(x, y, s): ...
def c2t00a(tta, ttb, uta, utb, xp, yp): ...
def c2t00b(tta, ttb, uta, utb, xp, yp): ...
def c2t06a(tta, ttb, uta, utb, xp, yp): ...
def c2tcio(rc2i, era, rpom): ...
def c2teqx(rbpn, gst, rpom): ...
def c2tpe(tta, ttb, uta, utb, dpsi, deps, xp, yp): ...
def c2txy(tta, ttb, uta, utb, x, y, xp, yp): ...
def eo06a(date1, date2): ...
def eors(rnpb, s): ...
def fw2m(gamb, phib, psi, eps): ...
def fw2xy(gamb, phib, psi, eps): ...
def ltp(epj): ...
def ltpb(epj): ...
def ltpecl(epj): ...
def ltpequ(epj): ...
def num00a(date1, date2): ...
def num00b(date1, date2): ...
def num06a(date1, date2): ...
def numat(epsa, dpsi, deps): ...
def nut00a(date1, date2): ...
def nut00b(date1, date2): ...
def nut06a(date1, date2): ...
def nut80(date1, date2): ...
def nutm80(date1, date2): ...
def obl06(date1, date2): ...
def obl80(date1, date2): ...
def p06e(date1, date2): ...
def pb06(date1, date2): ...
def pfw06(date1, date2): ...
def pmat00(date1, date2): ...
def pmat06(date1, date2): ...
def pmat76(date1, date2): ...
def pn00(date1, date2, dpsi, deps): ...
def pn00a(date1, date2): ...
def pn00b(date1, date2): ...
def pn06(date1, date2, dpsi, deps): ...
def pn06a(date1, date2): ...
def pnm00a(date1, date2): ...
def pnm00b(date1, date2): ...
def pnm06a(date1, date2): ...
def pnm80(date1, date2): ...
def pom00(xp, yp, sp): ...
def pr00(date1, date2): ...
def prec76(date01, date02, date11, date12): ...
def s00(date1, date2, x, y): ...
def s00a(date1, date2): ...
def s00b(date1, date2): ...
def s06(date1, date2, x, y): ...
def s06a(date1, date2): ...
def sp00(date1, date2): ...
def xy06(date1, date2): ...
def xys00a(date1, date2): ...
def xys00b(date1, date2): ...
def xys06a(date1, date2): ...
def ee00(date1, date2, epsa, dpsi): ...
def ee00a(date1, date2): ...
def ee00b(date1, date2): ...
def ee06a(date1, date2): ...
def eect00(date1, date2): ...
def eqeq94(date1, date2): ...
def era00(dj1, dj2): ...
def gmst00(uta, utb, tta, ttb): ...
def gmst06(uta, utb, tta, ttb): ...
def gmst82(dj1, dj2): ...
def gst00a(uta, utb, tta, ttb): ...
def gst00b(uta, utb): ...
def gst06(uta, utb, tta, ttb, rnpb): ...
def gst06a(uta, utb, tta, ttb): ...
def gst94(uta, utb): ...
def pvstar(pv): ...
def starpv(ra, dec, pmr, pmd, px, rv): ...
def fk425(r1950, d1950, dr1950, dd1950, p1950, v1950): ...
def fk45z(r1950, d1950, bepoch): ...
def fk524(r2000, d2000, dr2000, dd2000, p2000, v2000): ...
def fk52h(r5, d5, dr5, dd5, px5, rv5): ...
def fk54z(r2000, d2000, bepoch): ...
def fk5hip(): ...
def fk5hz(r5, d5, date1, date2): ...
def h2fk5(rh, dh, drh, ddh, pxh, rvh): ...
def hfk5z(rh, dh, date1, date2): ...
def starpm(ra1, dec1, pmr1, pmd1, px1, rv1, ep1a, ep1b, ep2a, ep2b): ...
def eceq06(date1, date2, dl, db): ...
def ecm06(date1, date2): ...
def eqec06(date1, date2, dr, dd): ...
def lteceq(epj, dl, db): ...
def ltecm(epj): ...
def lteqec(epj, dr, dd): ...
def g2icrs(dl, db): ...
def icrs2g(dr, dd): ...
def eform(n): ...
def gc2gd(n, xyz): ...
def gc2gde(a, f, xyz): ...
def gd2gc(n, elong, phi, height): ...
def gd2gce(a, f, elong, phi, height): ...
def d2dtf(scale, ndp, d1, d2): ...
def dat(iy, im, id, fd): ...
def dtdb(date1, date2, ut, elong, u, v): ...
def dtf2d(scale, iy, im, id, ihr, imn, sec): ...
def taitt(tai1, tai2): ...
def taiut1(tai1, tai2, dta): ...
def taiutc(tai1, tai2): ...
def tcbtdb(tcb1, tcb2): ...
def tcgtt(tcg1, tcg2): ...
def tdbtcb(tdb1, tdb2): ...
def tdbtt(tdb1, tdb2, dtr): ...
def tttai(tt1, tt2): ...
def tttcg(tt1, tt2): ...
def tttdb(tt1, tt2, dtr): ...
def ttut1(tt1, tt2, dt): ...
def ut1tai(ut11, ut12, dta): ...
def ut1tt(ut11, ut12, dt): ...
def ut1utc(ut11, ut12, dut1): ...
def utctai(utc1, utc2): ...
def utcut1(utc1, utc2, dut1): ...
def ae2hd(az, el, phi): ...
def hd2ae(ha, dec, phi): ...
def hd2pa(ha, dec, phi): ...
def tpors(xi, eta, a, b): ...
def tporv(xi, eta, v): ...
def tpsts(xi, eta, a0, b0): ...
def tpstv(xi, eta, v0): ...
def tpxes(a, b, a0, b0): ...
def tpxev(v, v0): ...
def a2af(ndp, angle): ...
def a2tf(ndp, angle): ...
def af2a(s, ideg, iamin, asec): ...
def anp(a): ...
def anpm(a): ...
def d2tf(ndp, days): ...
def tf2a(s, ihour, imin, sec): ...
def tf2d(s, ihour, imin, sec): ...
def rx(phi, r): ...
def ry(theta, r): ...
def rz(psi, r): ...
def cp(p): ...
def cpv(pv): ...
def cr(r): ...
def p2pv(p): ...
def pv2p(pv): ...
def ir(): ...
def zp(): ...
def zpv(): ...
def zr(): ...
def rxr(a, b): ...
def tr(r): ...
def rxp(r, p): ...
def rxpv(r, pv): ...
def trxp(r, p): ...
def trxpv(r, pv): ...
def rm2v(r): ...
def rv2m(w): ...
def pap(a, b): ...
def pas(al, ap, bl, bp): ...
def sepp(a, b): ...
def seps(al, ap, bl, bp): ...
def c2s(p): ...
def p2s(p): ...
def pv2s(pv): ...
def s2c(theta, phi): ...
def s2p(theta, phi, r): ...
def s2pv(theta, phi, r, td, pd, rd): ...
def pdp(a, b): ...
def pm(p): ...
def pmp(a, b): ...
def pn(p): ...
def ppp(a, b): ...
def ppsp(a, s, b): ...
def pvdpv(a, b): ...
def pvm(pv): ...
def pvmpv(a, b): ...
def pvppv(a, b): ...
def pvu(dt, pv): ...
def pvup(dt, pv): ...
def pvxpv(a, b): ...
def pxp(a, b): ...
def s2xpv(s1, s2, pv): ...
def sxp(s, p): ...
def sxpv(s, pv): ...
