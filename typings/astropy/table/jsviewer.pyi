"""
This type stub file was generated by pyright.
"""

import astropy.config as _config

class Conf(_config.ConfigNamespace):
    """
    Configuration parameters for `astropy.table.jsviewer`.
    """
    jquery_url = ...
    datatables_url = ...
    css_urls = ...


conf = ...
EXTERN_JS_DIR = ...
EXTERN_CSS_DIR = ...
_SORTING_SCRIPT_PART_1 = ...
_SORTING_SCRIPT_PART_2 = ...
IPYNB_JS_SCRIPT = ...
HTML_JS_SCRIPT = ...
DEFAULT_CSS = ...
DEFAULT_CSS_NB = ...
class JSViewer:
    """Provides an interactive HTML export of a Table.

    This class provides an interface to the `DataTables
    <https://datatables.net/>`_ library, which allow to visualize interactively
    an HTML table. It is used by the `~astropy.table.Table.show_in_browser`
    method.

    Parameters
    ----------
    use_local_files : bool, optional
        Use local files or a CDN for JavaScript libraries. Default False.
    display_length : int, optional
        Number or rows to show. Default to 50.

    """
    def __init__(self, use_local_files=..., display_length=...) -> None:
        ...
    
    @property
    def jquery_urls(self): # -> list[str] | list[Self@ConfigItem | Unknown | int | bool | list[int | float | str | bool] | string_type | None]:
        ...
    
    @property
    def css_urls(self): # -> list[str] | Self@ConfigItem | int | bool | list[int | float | str | bool] | string_type | None:
        ...
    
    def ipynb(self, table_id, css=..., sort_columns=...): # -> str:
        ...
    
    def html_js(self, table_id=..., sort_columns=...): # -> str:
        ...
    


def write_table_jsviewer(table, filename, table_id=..., max_lines=..., table_class=..., jskwargs=..., css=..., htmldict=..., overwrite=...): # -> None:
    ...

