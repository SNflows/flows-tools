"""
This type stub file was generated by pyright.
"""

from matplotlib.lines import Line2D

class Ticks(Line2D):
    """
    Ticks are derived from Line2D, and note that ticks themselves
    are markers. Thus, you should use set_mec, set_mew, etc.

    To change the tick size (length), you need to use
    set_ticksize. To change the direction of the ticks (ticks are
    in opposite direction of ticklabels by default), use
    set_tick_out(False).

    Note that Matplotlib's defaults dictionary :data:`~matplotlib.rcParams`
    contains default settings (color, size, width) of the form `xtick.*` and
    `ytick.*`. In a WCS projection, there may not be a clear relationship
    between axes of the projection and 'x' or 'y' axes. For this reason,
    we read defaults from `xtick.*`. The following settings affect the
    default appearance of ticks:

    * `xtick.direction`
    * `xtick.major.size`
    * `xtick.major.width`
    * `xtick.minor.size`
    * `xtick.color`

    Attributes
    ----------
    ticks_locs : dict
        This is set when the ticks are drawn, and is a mapping from axis to
        the locations of the ticks for that axis.
    """
    def __init__(self, ticksize=..., tick_out=..., **kwargs) -> None:
        ...
    
    def display_minor_ticks(self, display_minor_ticks): # -> None:
        ...
    
    def get_display_minor_ticks(self): # -> bool:
        ...
    
    def set_tick_out(self, tick_out): # -> None:
        """
        set True if tick need to be rotated by 180 degree.
        """
        ...
    
    def get_tick_out(self):
        """
        Return True if the tick will be rotated by 180 degree.
        """
        ...
    
    def set_ticksize(self, ticksize): # -> None:
        """
        set length of the ticks in points.
        """
        ...
    
    def get_ticksize(self):
        """
        Return length of the ticks in points.
        """
        ...
    
    def set_minor_ticksize(self, ticksize): # -> None:
        """
        set length of the minor ticks in points.
        """
        ...
    
    def get_minor_ticksize(self):
        """
        Return length of the minor ticks in points.
        """
        ...
    
    @property
    def out_size(self): # -> float:
        ...
    
    def set_visible_axes(self, visible_axes): # -> None:
        ...
    
    def get_visible_axes(self): # -> dict_keys[Unknown, list[Unknown]] | list[Unknown]:
        ...
    
    def clear(self): # -> None:
        ...
    
    def add(self, axis, world, pixel, angle, axis_displacement): # -> None:
        ...
    
    def get_minor_world(self): # -> defaultdict[Unknown, list[Unknown]]:
        ...
    
    def add_minor(self, minor_axis, minor_world, minor_pixel, minor_angle, minor_axis_displacement): # -> None:
        ...
    
    def __len__(self): # -> int:
        ...
    
    _tickvert_path = ...
    def draw(self, renderer): # -> None:
        """
        Draw the ticks.
        """
        ...
    


