"""
This type stub file was generated by pyright.
"""

"""
This file contains routines to verify the correctness of UCD strings.
"""
__all__ = ['parse_ucd', 'check_ucd']
class UCDWords:
    """
    Manages a list of acceptable UCD words.

    Works by reading in a data file exactly as provided by IVOA.  This
    file resides in data/ucd1p-words.txt.
    """
    def __init__(self) -> None:
        ...
    
    def is_primary(self, name): # -> bool:
        """
        Returns True if *name* is a valid primary name.
        """
        ...
    
    def is_secondary(self, name): # -> bool:
        """
        Returns True if *name* is a valid secondary name.
        """
        ...
    
    def get_description(self, name):
        """
        Returns the official English description of the given UCD
        *name*.
        """
        ...
    
    def normalize_capitalization(self, name):
        """
        Returns the standard capitalization form of the given name.
        """
        ...
    


_ucd_singleton = ...
def parse_ucd(ucd, check_controlled_vocabulary=..., has_colon=...): # -> list[Unknown]:
    """
    Parse the UCD into its component parts.

    Parameters
    ----------
    ucd : str
        The UCD string

    check_controlled_vocabulary : bool, optional
        If `True`, then each word in the UCD will be verified against
        the UCD1+ controlled vocabulary, (as required by the VOTable
        specification version 1.2), otherwise not.

    has_colon : bool, optional
        If `True`, the UCD may contain a colon (as defined in earlier
        versions of the standard).

    Returns
    -------
    parts : list
        The result is a list of tuples of the form:

            (*namespace*, *word*)

        If no namespace was explicitly specified, *namespace* will be
        returned as ``'ivoa'`` (i.e., the default namespace).

    Raises
    ------
    ValueError
        if *ucd* is invalid
    """
    ...

def check_ucd(ucd, check_controlled_vocabulary=..., has_colon=...): # -> bool:
    """
    Returns False if *ucd* is not a valid `unified content descriptor`_.

    Parameters
    ----------
    ucd : str
        The UCD string

    check_controlled_vocabulary : bool, optional
        If `True`, then each word in the UCD will be verified against
        the UCD1+ controlled vocabulary, (as required by the VOTable
        specification version 1.2), otherwise not.

    has_colon : bool, optional
        If `True`, the UCD may contain a colon (as defined in earlier
        versions of the standard).

    Returns
    -------
    valid : bool
    """
    ...

