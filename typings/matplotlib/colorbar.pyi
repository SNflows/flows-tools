import matplotlib.spines as mspines
from _typeshed import Incomplete
from matplotlib import cbook as cbook, cm as cm, collections as collections, colors as colors, contour as contour, ticker as ticker

class _ColorbarSpine(mspines.Spine):
    def __init__(self, axes) -> None: ...
    def get_window_extent(self, renderer: Incomplete | None = ...): ...
    stale: bool
    def set_xy(self, xy) -> None: ...
    def draw(self, renderer): ...

class _ColorbarAxesLocator:
    def __init__(self, cbar) -> None: ...
    def __call__(self, ax, renderer): ...
    def get_subplotspec(self): ...

class Colorbar:
    n_rasterize: int
    mappable: Incomplete
    ax: Incomplete
    alpha: Incomplete
    cmap: Incomplete
    norm: Incomplete
    values: Incomplete
    boundaries: Incomplete
    extend: Incomplete
    spacing: Incomplete
    orientation: Incomplete
    drawedges: Incomplete
    extendfrac: Incomplete
    extendrect: Incomplete
    solids: Incomplete
    solids_patches: Incomplete
    lines: Incomplete
    outline: Incomplete
    dividers: Incomplete
    ticklocation: Incomplete
    def __init__(self, ax, mappable: Incomplete | None = ..., *, cmap: Incomplete | None = ..., norm: Incomplete | None = ..., alpha: Incomplete | None = ..., values: Incomplete | None = ..., boundaries: Incomplete | None = ..., orientation: str = ..., ticklocation: str = ..., extend: Incomplete | None = ..., spacing: str = ..., ticks: Incomplete | None = ..., format: Incomplete | None = ..., drawedges: bool = ..., filled: bool = ..., extendfrac: Incomplete | None = ..., extendrect: bool = ..., label: str = ...) -> None: ...
    @property
    def locator(self): ...
    @locator.setter
    def locator(self, loc) -> None: ...
    @property
    def minorlocator(self): ...
    @minorlocator.setter
    def minorlocator(self, loc) -> None: ...
    @property
    def formatter(self): ...
    @formatter.setter
    def formatter(self, fmt) -> None: ...
    @property
    def minorformatter(self): ...
    @minorformatter.setter
    def minorformatter(self, fmt) -> None: ...
    patch: Incomplete
    filled: Incomplete
    stale: bool
    def update_normal(self, mappable) -> None: ...
    def draw_all(self) -> None: ...
    def add_lines(self, *args, **kwargs): ...
    def update_ticks(self) -> None: ...
    def set_ticks(self, ticks, update_ticks: bool = ..., labels: Incomplete | None = ..., *, minor: bool = ..., **kwargs) -> None: ...
    def get_ticks(self, minor: bool = ...): ...
    def set_ticklabels(self, ticklabels, update_ticks: bool = ..., *, minor: bool = ..., **kwargs) -> None: ...
    def minorticks_on(self) -> None: ...
    def minorticks_off(self) -> None: ...
    def set_label(self, label, *, loc: Incomplete | None = ..., **kwargs) -> None: ...
    def set_alpha(self, alpha) -> None: ...
    def remove(self) -> None: ...
    def drag_pan(self, button, key, x, y) -> None: ...
ColorbarBase = Colorbar

def make_axes(parents, location: Incomplete | None = ..., orientation: Incomplete | None = ..., fraction: float = ..., shrink: float = ..., aspect: int = ..., **kwargs): ...
def make_axes_gridspec(parent, *, location: Incomplete | None = ..., orientation: Incomplete | None = ..., fraction: float = ..., shrink: float = ..., aspect: int = ..., **kwargs): ...
