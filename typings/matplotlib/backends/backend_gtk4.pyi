from ._backend_gtk import _BackendGTK, _FigureManagerGTK, _NavigationToolbar2GTK
from _typeshed import Incomplete
from gi.repository import Gtk
from matplotlib import backend_tools as backend_tools, cbook as cbook
from matplotlib.backend_bases import FigureCanvasBase as FigureCanvasBase, KeyEvent as KeyEvent, LocationEvent as LocationEvent, MouseEvent as MouseEvent, ResizeEvent as ResizeEvent, ToolContainerBase as ToolContainerBase

class FigureCanvasGTK4(FigureCanvasBase, Gtk.DrawingArea):
    required_interactive_framework: str
    supports_blit: bool
    manager_class: Incomplete
    def __init__(self, figure: Incomplete | None = ...) -> None: ...
    def destroy(self) -> None: ...
    def set_cursor(self, cursor) -> None: ...
    def scroll_event(self, controller, dx, dy): ...
    def button_press_event(self, controller, n_press, x, y) -> None: ...
    def button_release_event(self, controller, n_press, x, y) -> None: ...
    def key_press_event(self, controller, keyval, keycode, state): ...
    def key_release_event(self, controller, keyval, keycode, state): ...
    def motion_notify_event(self, controller, x, y) -> None: ...
    def leave_notify_event(self, controller) -> None: ...
    def enter_notify_event(self, controller, x, y) -> None: ...
    def resize_event(self, area, width, height) -> None: ...
    def on_draw_event(self, widget, ctx) -> None: ...
    def draw(self) -> None: ...
    def draw_idle(self): ...
    def flush_events(self) -> None: ...

class NavigationToolbar2GTK4(_NavigationToolbar2GTK, Gtk.Box):
    message: Incomplete
    def __init__(self, canvas, window: Incomplete | None = ...) -> None: ...
    win: Incomplete
    def save_figure(self, *args) -> None: ...

class ToolbarGTK4(ToolContainerBase, Gtk.Box):
    def __init__(self, toolmanager) -> None: ...
    def add_toolitem(self, name, group, position, image_file, description, toggle) -> None: ...
    def toggle_toolitem(self, name, toggled) -> None: ...
    def remove_toolitem(self, name) -> None: ...
    def set_message(self, s) -> None: ...

class SaveFigureGTK4(backend_tools.SaveFigureBase):
    def trigger(self, *args, **kwargs) -> None: ...

class HelpGTK4(backend_tools.ToolHelpBase):
    def trigger(self, *args) -> None: ...

class ToolCopyToClipboardGTK4(backend_tools.ToolCopyToClipboardBase):
    def trigger(self, *args, **kwargs) -> None: ...
Toolbar = ToolbarGTK4

class FigureManagerGTK4(_FigureManagerGTK): ...

class _BackendGTK4(_BackendGTK):
    FigureCanvas: Incomplete
    FigureManager: Incomplete
