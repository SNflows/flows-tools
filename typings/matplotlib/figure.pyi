from _typeshed import Incomplete
from matplotlib import backend_bases as backend_bases, projections as projections
from matplotlib.artist import Artist as Artist, allow_rasterization as allow_rasterization
from matplotlib.axes import Axes as Axes, SubplotBase as SubplotBase, subplot_class_factory as subplot_class_factory
from matplotlib.backend_bases import DrawEvent as DrawEvent, FigureCanvasBase as FigureCanvasBase, MouseButton as MouseButton, NonGuiException as NonGuiException
from matplotlib.gridspec import GridSpec as GridSpec
from matplotlib.layout_engine import ConstrainedLayoutEngine as ConstrainedLayoutEngine, LayoutEngine as LayoutEngine, PlaceHolderLayoutEngine as PlaceHolderLayoutEngine, TightLayoutEngine as TightLayoutEngine
from matplotlib.patches import Rectangle as Rectangle
from matplotlib.text import Text as Text
from matplotlib.transforms import Affine2D as Affine2D, Bbox as Bbox, BboxTransformTo as BboxTransformTo, TransformedBbox as TransformedBbox

class _AxesStack:
    def __init__(self) -> None: ...
    def as_list(self): ...
    def remove(self, a) -> None: ...
    def bubble(self, a) -> None: ...
    def add(self, a) -> None: ...
    def current(self): ...

class SubplotParams:
    def __init__(self, left: Incomplete | None = ..., bottom: Incomplete | None = ..., right: Incomplete | None = ..., top: Incomplete | None = ..., wspace: Incomplete | None = ..., hspace: Incomplete | None = ...) -> None: ...
    validate: Incomplete
    left: Incomplete
    right: Incomplete
    bottom: Incomplete
    top: Incomplete
    wspace: Incomplete
    hspace: Incomplete
    def update(self, left: Incomplete | None = ..., bottom: Incomplete | None = ..., right: Incomplete | None = ..., top: Incomplete | None = ..., wspace: Incomplete | None = ..., hspace: Incomplete | None = ...) -> None: ...

class FigureBase(Artist):
    figure: Incomplete
    artists: Incomplete
    lines: Incomplete
    patches: Incomplete
    texts: Incomplete
    images: Incomplete
    legends: Incomplete
    subfigs: Incomplete
    stale: bool
    suppressComposite: Incomplete
    def __init__(self, **kwargs) -> None: ...
    def autofmt_xdate(self, bottom: float = ..., rotation: int = ..., ha: str = ..., which: str = ...) -> None: ...
    def get_children(self): ...
    def contains(self, mouseevent): ...
    def get_window_extent(self, renderer: Incomplete | None = ..., *args, **kwargs): ...
    def suptitle(self, t, **kwargs): ...
    def supxlabel(self, t, **kwargs): ...
    def supylabel(self, t, **kwargs): ...
    def get_edgecolor(self): ...
    def get_facecolor(self): ...
    def get_frameon(self): ...
    def set_linewidth(self, linewidth) -> None: ...
    def get_linewidth(self): ...
    def set_edgecolor(self, color) -> None: ...
    def set_facecolor(self, color) -> None: ...
    def set_frameon(self, b) -> None: ...
    frameon: Incomplete
    def add_artist(self, artist, clip: bool = ...): ...
    def add_axes(self, *args, **kwargs): ...
    def add_subplot(self, *args, **kwargs): ...
    def subplots(self, nrows: int = ..., ncols: int = ..., *, sharex: bool = ..., sharey: bool = ..., squeeze: bool = ..., width_ratios: Incomplete | None = ..., height_ratios: Incomplete | None = ..., subplot_kw: Incomplete | None = ..., gridspec_kw: Incomplete | None = ...): ...
    def delaxes(self, ax): ...
    def clear(self, keep_observers: bool = ...) -> None: ...
    def clf(self, keep_observers: bool = ...): ...
    def legend(self, *args, **kwargs): ...
    def text(self, x, y, s, fontdict: Incomplete | None = ..., **kwargs): ...
    def colorbar(self, mappable, cax: Incomplete | None = ..., ax: Incomplete | None = ..., use_gridspec: bool = ..., **kwargs): ...
    def subplots_adjust(self, left: Incomplete | None = ..., bottom: Incomplete | None = ..., right: Incomplete | None = ..., top: Incomplete | None = ..., wspace: Incomplete | None = ..., hspace: Incomplete | None = ...) -> None: ...
    def align_xlabels(self, axs: Incomplete | None = ...) -> None: ...
    def align_ylabels(self, axs: Incomplete | None = ...) -> None: ...
    def align_labels(self, axs: Incomplete | None = ...) -> None: ...
    def add_gridspec(self, nrows: int = ..., ncols: int = ..., **kwargs): ...
    def subfigures(self, nrows: int = ..., ncols: int = ..., squeeze: bool = ..., wspace: Incomplete | None = ..., hspace: Incomplete | None = ..., width_ratios: Incomplete | None = ..., height_ratios: Incomplete | None = ..., **kwargs): ...
    def add_subfigure(self, subplotspec, **kwargs): ...
    def sca(self, a): ...
    def gca(self): ...
    def get_default_bbox_extra_artists(self): ...
    def get_tightbbox(self, renderer: Incomplete | None = ..., bbox_extra_artists: Incomplete | None = ...): ...
    def subplot_mosaic(self, mosaic, *, sharex: bool = ..., sharey: bool = ..., width_ratios: Incomplete | None = ..., height_ratios: Incomplete | None = ..., empty_sentinel: str = ..., subplot_kw: Incomplete | None = ..., gridspec_kw: Incomplete | None = ...): ...

class SubFigure(FigureBase):
    callbacks: Incomplete
    figure: Incomplete
    subplotpars: Incomplete
    dpi_scale_trans: Incomplete
    canvas: Incomplete
    transFigure: Incomplete
    bbox_relative: Incomplete
    figbbox: Incomplete
    bbox: Incomplete
    transSubfigure: Incomplete
    patch: Incomplete
    def __init__(self, parent, subplotspec, *, facecolor: Incomplete | None = ..., edgecolor: Incomplete | None = ..., linewidth: float = ..., frameon: Incomplete | None = ..., **kwargs) -> None: ...
    @property
    def dpi(self): ...
    @dpi.setter
    def dpi(self, value) -> None: ...
    def get_dpi(self): ...
    stale: bool
    def set_dpi(self, val) -> None: ...
    def get_constrained_layout(self): ...
    def get_constrained_layout_pads(self, relative: bool = ...): ...
    def get_layout_engine(self): ...
    @property
    def axes(self): ...
    @axes.setter
    def axes(self, value) -> None: ...
    get_axes: Incomplete
    def draw(self, renderer) -> None: ...

class Figure(FigureBase):
    callbacks: Incomplete
    bbox_inches: Incomplete
    dpi_scale_trans: Incomplete
    bbox: Incomplete
    figbbox: Incomplete
    transFigure: Incomplete
    transSubfigure: Incomplete
    patch: Incomplete
    subplotpars: Incomplete
    def __init__(self, figsize: Incomplete | None = ..., dpi: Incomplete | None = ..., facecolor: Incomplete | None = ..., edgecolor: Incomplete | None = ..., linewidth: float = ..., frameon: Incomplete | None = ..., subplotpars: Incomplete | None = ..., tight_layout: Incomplete | None = ..., constrained_layout: Incomplete | None = ..., *, layout: Incomplete | None = ..., **kwargs) -> None: ...
    def pick(self, mouseevent) -> None: ...
    def set_layout_engine(self, layout: Incomplete | None = ..., **kwargs) -> None: ...
    def get_layout_engine(self): ...
    def show(self, warn: bool = ...) -> None: ...
    @property
    def axes(self): ...
    @axes.setter
    def axes(self, value) -> None: ...
    get_axes: Incomplete
    dpi: Incomplete
    def get_tight_layout(self): ...
    stale: bool
    def set_tight_layout(self, tight) -> None: ...
    def get_constrained_layout(self): ...
    def set_constrained_layout(self, constrained) -> None: ...
    def set_constrained_layout_pads(self, **kwargs) -> None: ...
    def get_constrained_layout_pads(self, relative: bool = ...): ...
    canvas: Incomplete
    def set_canvas(self, canvas) -> None: ...
    def figimage(self, X, xo: int = ..., yo: int = ..., alpha: Incomplete | None = ..., norm: Incomplete | None = ..., cmap: Incomplete | None = ..., vmin: Incomplete | None = ..., vmax: Incomplete | None = ..., origin: Incomplete | None = ..., resize: bool = ..., **kwargs): ...
    def set_size_inches(self, w, h: Incomplete | None = ..., forward: bool = ...) -> None: ...
    def get_size_inches(self): ...
    def get_figwidth(self): ...
    def get_figheight(self): ...
    def get_dpi(self): ...
    def set_dpi(self, val) -> None: ...
    def set_figwidth(self, val, forward: bool = ...) -> None: ...
    def set_figheight(self, val, forward: bool = ...) -> None: ...
    def clear(self, keep_observers: bool = ...) -> None: ...
    def draw(self, renderer) -> None: ...
    def draw_without_rendering(self) -> None: ...
    def draw_artist(self, a) -> None: ...
    def add_axobserver(self, func): ...
    def savefig(self, fname, *, transparent: Incomplete | None = ..., **kwargs) -> None: ...
    def ginput(self, n: int = ..., timeout: int = ..., show_clicks: bool = ..., mouse_add=..., mouse_pop=..., mouse_stop=...): ...
    def waitforbuttonpress(self, timeout: int = ...): ...
    def execute_constrained_layout(self, renderer: Incomplete | None = ...): ...
    def tight_layout(self, *, pad: float = ..., h_pad: Incomplete | None = ..., w_pad: Incomplete | None = ..., rect: Incomplete | None = ...) -> None: ...

def figaspect(arg): ...
