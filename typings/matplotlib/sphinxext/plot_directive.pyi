from _typeshed import Incomplete
from docutils.parsers.rst import Directive
from matplotlib import cbook as cbook
from matplotlib.backend_bases import FigureManagerBase as FigureManagerBase

def mark_plot_labels(app, document) -> None: ...

class PlotDirective(Directive):
    has_content: bool
    required_arguments: int
    optional_arguments: int
    final_argument_whitespace: bool
    option_spec: Incomplete
    def run(self): ...

def setup(app): ...
def contains_doctest(text): ...
def unescape_doctest(text): ...
def split_code_at_show(text): ...

TEMPLATE: str
exception_template: str
plot_context: Incomplete

class ImageFile:
    basename: Incomplete
    dirname: Incomplete
    formats: Incomplete
    def __init__(self, basename, dirname) -> None: ...
    def filename(self, format): ...
    def filenames(self): ...

def out_of_date(original, derived, includes: Incomplete | None = ...): ...

class PlotError(RuntimeError): ...

def run_code(code, code_path, ns: Incomplete | None = ..., function_name: Incomplete | None = ...) -> None: ...
def clear_state(plot_rcparams, close: bool = ...) -> None: ...
def get_plot_formats(config): ...
def render_figures(code, code_path, output_dir, output_base, context, function_name, config, context_reset: bool = ..., close_figs: bool = ..., code_includes: Incomplete | None = ...): ...
def run(arguments, content, options, state_machine, state, lineno): ...
